{"version":3,"file":"carousel.js","sources":["carousel.js"],"sourcesContent":["// component\nexport default class Carousel {\n\tconstructor(id, rawopts) {\n\t\t/* Set Options\n\t\t/* ================================================================== */\n\n\t\tconst opts = Object(rawopts);\n\n\t\t// set the options from Carousel defaults\n\t\tfor (let key in Carousel.defaults) {\n\t\t\tthis[key] = key in opts ? opts[key] : Carousel.defaults[key];\n\t\t}\n\n\t\t/* Initialize the Target Element\n\t\t/* ================================================================== */\n\n\t\tconst $target = this.target = id instanceof Element ? id : document.querySelector(id);\n\n\t\t// set the prefix as the root class\n\t\t$target.classList.add(this.prefix);\n\n\t\t// set the prefix as the fallback id (needed for aria-labelledby)\n\t\t$target.id = $target.id || this.prefix;\n\n\t\t/* Initialize the Previous and Next Immediate Controls\n\t\t/* ================================================================== */\n\n\t\tconst initImmediateControl = (variation, offset) => {\n\t\t\tconst $control = this[variation + 'Control'] = document.createElement('button');\n\n\t\t\t$control.className = `${ this.prefix }-immediate-control ${ this.prefix }-${ variation }-control`;\n\n\t\t\t$control.addEventListener('click', () => {\n\t\t\t\tthis.setSlideByIndex(this.currentIndex + offset);\n\t\t\t});\n\n\t\t\t// create label for immediate control\n\t\t\t$control.appendChild(\n\t\t\t\tdocument.createElement('span')\n\t\t\t).appendChild(\n\t\t\t\tdocument.createTextNode(`${ this.lang[variation] } ${ this.lang.slide }`)\n\t\t\t);\n\t\t};\n\n\t\t// create previous and next immediate controls\n\t\tinitImmediateControl('previous', -1);\n\t\tinitImmediateControl('next', 1);\n\n\t\t// prepend the previous control to the target\n\t\t$target.insertBefore(this.previousControl, $target.firstElementChild);\n\n\t\t// append the next control to the target\n\t\t$target.appendChild(this.nextControl);\n\n\t\t/* Initialize Pagination Controls\n\t\t/* ================================================================== */\n\n\t\tconst $pagination = this.paginationControls = document.createElement('nav');\n\n\t\t$pagination.className = `${ this.prefix }-pagination-controls`;\n\n\t\t$pagination.setAttribute('role', 'navigation');\n\t\t$pagination.setAttribute('aria-labelledby', $target.id);\n\n\t\t// append the pagination controls to the target\n\t\t$target.appendChild($pagination);\n\n\t\t/* Initialize Slides\n\t\t/* ================================================================== */\n\n\t\tthis.paginationControl = [];\n\n\t\tthis.slides = [].map.call(\n\t\t\t// get slides from an array-like object or a selector string\n\t\t\tObject(this.slides) === this.slides && 'number' === typeof this.slides.length\n\t\t\t\t? this.slides\n\t\t\t\t: $target.querySelectorAll(this.slides),\n\t\t\t($slide, index) => {\n\t\t\t\t$slide.id = $slide.id || `${ this.prefix }-slide-${ index }`;\n\n\t\t\t\t$slide.classList.add(`${ this.prefix }-slide`);\n\t\t\t\t$slide.classList.add(`${ this.prefix }-slide-${ index }`);\n\t\t\t\t$slide.classList.add(`${ this.prefix }-inactive-slide`);\n\n\t\t\t\t$slide.setAttribute('aria-hidden', true);\n\n\t\t\t\t// create the pagination control for the slide\n\t\t\t\tconst $control = this.paginationControl[index] = $pagination.appendChild(\n\t\t\t\t\tdocument.createElement('button')\n\t\t\t\t);\n\n\t\t\t\t$control.className = `${ this.prefix }-pagination-control ${ this.prefix }-inactive-control`;\n\n\t\t\t\t$control.addEventListener('click', () => {\n\t\t\t\t\tthis.setSlideByIndex(index);\n\t\t\t\t});\n\n\t\t\t\t// create the label for pagination control for the slide\n\t\t\t\t$control.appendChild(\n\t\t\t\t\tdocument.createElement('span')\n\t\t\t\t).appendChild(\n\t\t\t\t\tdocument.createTextNode(`${ this.lang.slide } ${ index + 1 }`)\n\t\t\t\t);\n\n\t\t\t\t// return the slide and its pagination control\n\t\t\t\treturn {\n\t\t\t\t\ttarget:   $slide,\n\t\t\t\t\tcontrol:  $control\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\t/* Manage Interactive States\n\t\t/* ================================================================== */\n\n\t\tthis.isVisible = true;\n\t\tthis.isMouseInteractive = false;\n\t\tthis.isFocusInteractive = false;\n\t\tthis.isInputInteractive = false;\n\n\t\t// manage interactive changes\n\t\tconst oninteractivechange = (event) => {\n\t\t\t// update the visibility state\n\t\t\tconst isVisibleNow = 'visibilitychange' === event.type ? 'visible' === $target.ownerDocument.visibilityState : this.isVisible;\n\n\t\t\t// update the input states\n\t\t\tconst isMouseInteractiveNow = 'mouseenter' === event.type ? true : 'mouseleave' === event.type ? false : this.isMouseInteractive;\n\t\t\tconst isFocusInteractiveNow =    'focusin' === event.type ? true :   'focusout' === event.type ? false : this.isFocusInteractive;\n\n\t\t\t// update the interactive state\n\t\t\tconst isInputInteractiveNow = isMouseInteractiveNow || isFocusInteractiveNow;\n\n\t\t\t// if the visibility state has changed\n\t\t\tif (isVisibleNow !== this.isVisible) {\n\t\t\t\t// dispatch a change event when the document changes visibility\n\t\t\t\tthis.isVisible = isVisibleNow;\n\n\t\t\t\tif (this.autoplay) {\n\t\t\t\t\tthis[isVisibleNow ? 'play' : 'pause']();\n\t\t\t\t}\n\n\t\t\t\tthis.dispatch(isVisibleNow ? 'visibilityvisible' : 'visibilityhidden', event.target);\n\t\t\t\tthis.dispatch('visibilitychange', event.target);\n\t\t\t}\n\n\t\t\t// if the mouse state has changed\n\t\t\tif (isMouseInteractiveNow !== this.isMouseInteractive) {\n\t\t\t\t// dispatch a change event when a mouse is entering or leaving the carousel\n\t\t\t\tthis.isMouseInteractive = isMouseInteractiveNow;\n\n\t\t\t\tthis.dispatch(isMouseInteractiveNow ? 'mouseenter' : 'mouseleave', event.target);\n\t\t\t\tthis.dispatch('mousechange', event.target);\n\t\t\t}\n\n\t\t\t// if the focus state has changed\n\t\t\tif (isFocusInteractiveNow !== this.isFocusInteractive) {\n\t\t\t\t// dispatch a change event when a keyboard is entering or leaving the carousel\n\t\t\t\tthis.isFocusInteractive = isFocusInteractiveNow;\n\n\t\t\t\tif (this.autoplay) {\n\t\t\t\t\tthis[isFocusInteractiveNow ? 'pause' : 'play']();\n\t\t\t\t}\n\n\t\t\t\tthis.dispatch(isFocusInteractiveNow ? 'focusenter' : 'focusleave', event.target);\n\t\t\t\tthis.dispatch('focuschange', event.target);\n\t\t\t}\n\n\t\t\t// if the interactive state has changed\n\t\t\tif (isInputInteractiveNow !== this.isInputInteractive) {\n\t\t\t\t// dispatch a change event when a mouse or keyboard is entering or leaving the carousel\n\t\t\t\tthis.isInputInteractive = isInputInteractiveNow;\n\n\t\t\t\tthis.dispatch(isInputInteractiveNow ? 'inputenter' : 'inputleave', event.target);\n\t\t\t\tthis.dispatch('inputchange', event.target);\n\t\t\t}\n\t\t}\n\n\t\t// listen for visibility changes\n\t\t$target.ownerDocument.addEventListener('visibilitychange', oninteractivechange);\n\n\t\t// listen for input events\n\t\t$target.addEventListener('mouseenter', oninteractivechange);\n\t\t$target.addEventListener('mouseleave', oninteractivechange);\n\t\t$target.addEventListener('focusout',   onfocuschange);\n\t\t$target.addEventListener('focusin',    onfocuschange);\n\n\t\t// manage the focus event (using a slight delay)\n\t\tlet focusTimeout;\n\n\t\tfunction onfocuschange() {\n\t\t\tclearTimeout(focusTimeout);\n\n\t\t\tfocusTimeout = setTimeout(oninteractivechange, 0, event);\n\t\t}\n\n\t\t/* Initialize the Current Slide\n\t\t/* ================================================================== */\n\n\t\tconst cachedIndex = this.currentIndex || 0;\n\n\t\tthis.currentIndex = null;\n\n\t\tthis.setSlideByIndex(cachedIndex);\n\n\t\t/* Dispatch the Loaded Event\n\t\t/* ================================================================== */\n\n\t\tthis.dispatch('loaded', $target);\n\n\t\t/* Start Autoplay\n\t\t/* ================================================================== */\n\n\t\tif (this.autoplay) {\n\t\t\tthis.play();\n\t\t}\n\t}\n\n\t/* Set Slide By Index\n\t/* ================================================================== */\n\n\tsetSlideByIndex(index) {\n\t\tif (this.currentIndex !== index) {\n\t\t\t// set the length using the total number of slides\n\t\t\tconst length   = this.slides.length;\n\n\t\t\t// set the old and new indexes and slides using a modulus\n\t\t\tconst oldIndex = this.lastIndex = this.currentIndex;\n\t\t\tconst newIndex = this.currentIndex = (length + index % length) % length;\n\n\t\t\tconst oldSlide = this.slides[oldIndex];\n\t\t\tconst newSlide = this.slides[newIndex];\n\n\t\t\tif (oldSlide) {\n\t\t\t\t// update the old slide\n\t\t\t\toldSlide.target.classList.remove(`${ this.prefix }-active-slide`);\n\t\t\t\toldSlide.target.classList.add(`${ this.prefix }-inactive-slide`);\n\t\t\t\toldSlide.target.setAttribute('aria-hidden', true);\n\n\t\t\t\t// update the old slide control\n\t\t\t\toldSlide.control.classList.remove(`${ this.prefix }-active-control`);\n\t\t\t\toldSlide.control.classList.add(`${ this.prefix }-inactive-control`);\n\t\t\t\toldSlide.control.removeAttribute('aria-current');\n\t\t\t\toldSlide.control.removeAttribute('aria-controls');\n\n\t\t\t\t// dispatch the slideleave event from the old slide target\n\t\t\t\tthis.dispatch('slideleave', oldSlide.target);\n\t\t\t}\n\n\t\t\t// update the new slide\n\t\t\tnewSlide.target.classList.add(`${ this.prefix }-active-slide`);\n\t\t\tnewSlide.target.classList.remove(`${ this.prefix }-inactive-slide`);\n\t\t\tnewSlide.target.removeAttribute('aria-hidden');\n\n\t\t\t// update the new slide control\n\t\t\tnewSlide.control.classList.add(`${ this.prefix }-active-control`);\n\t\t\tnewSlide.control.classList.remove(`${ this.prefix }-inactive-control`);\n\t\t\tnewSlide.control.setAttribute('aria-current', true);\n\t\t\tnewSlide.control.setAttribute('aria-controls', newSlide.target.id);\n\n\t\t\t// dispatch slideenter and slidechange events from the new slide target\n\t\t\tthis.dispatch('slideenter', newSlide.target);\n\t\t\tthis.dispatch('slidechange', newSlide.target);\n\t\t}\n\t}\n\n\t/* Dispatch a Prefixed Custom Event bound to the instance\n\t/* ================================================================== */\n\n\tdispatch(type, target) {\n\t\tconst event = document.createEvent('CustomEvent');\n\n\t\tevent.initCustomEvent(`${ this.prefix }:${ type }`, true, false, this);\n\n\t\ttarget.dispatchEvent(event);\n\t}\n\n\t/* Start automatic Slide progression (using Durations)\n\t/* ================================================================== */\n\n\tplay() {\n\t\tconst onplay = () => {\n\t\t\tconst duration = this.slides[this.currentIndex].duration || this.duration;\n\n\t\t\tthis._interval = setTimeout(\n\t\t\t\t() => {\n\t\t\t\t\tthis.setSlideByIndex(this.currentIndex + 1);\n\n\t\t\t\t\tif (this._interval) {\n\t\t\t\t\t\tthis._interval = clearTimeout(this._interval);\n\n\t\t\t\t\t\tonplay();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tduration\n\t\t\t);\n\t\t};\n\n\t\tif (!this._interval) {\n\t\t\tonplay();\n\n\t\t\tthis.dispatch('play', this.target);\n\t\t\tthis.dispatch('playpause', this.target);\n\t\t}\n\t}\n\n\t/* Pause automatic Slide progression\n\t/* ================================================================== */\n\n\tpause() {\n\t\tif (this._interval) {\n\t\t\tthis._interval = clearTimeout(this._interval);\n\n\t\t\tthis.dispatch('pause', this.target);\n\t\t\tthis.dispatch('playpause', this.target);\n\t\t}\n\t}\n}\n\n// default options\nCarousel.defaults = {\n\tprefix: 'carousel',\n\tslides: 'li',\n\tcurrentIndex: 0,\n\tduration: 8000,\n\tautoplay: false,\n\tlang: {\n\t\tnext: 'Next',\n\t\tprevious: 'Previous',\n\t\tslide: 'Slide'\n\t}\n};\n"],"names":["Carousel","id","rawopts","onfocuschange","focusTimeout","setTimeout","oninteractivechange","event","opts","Object","key","defaults","$target","this","target","Element","document","querySelector","classList","add","prefix","initImmediateControl","variation","offset","$control","_this","createElement","className","addEventListener","setSlideByIndex","currentIndex","appendChild","createTextNode","lang","slide","insertBefore","previousControl","firstElementChild","nextControl","$pagination","paginationControls","setAttribute","paginationControl","slides","map","call","length","querySelectorAll","$slide","index","isVisible","isMouseInteractive","isFocusInteractive","isInputInteractive","isVisibleNow","type","ownerDocument","visibilityState","isMouseInteractiveNow","isFocusInteractiveNow","isInputInteractiveNow","autoplay","dispatch","cachedIndex","play","oldIndex","lastIndex","newIndex","oldSlide","newSlide","remove","control","removeAttribute","createEvent","initCustomEvent","dispatchEvent","_interval","onplay","duration","_this2","clearTimeout"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}